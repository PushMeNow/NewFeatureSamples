name: grafana-infra

networks:
    common-network:
    grafana-internal:
        internal: true

services:
    # service to collect all telemetry in one place by one specification and then send them to other services
    otel-collector:
        image: otel/opentelemetry-collector:latest
        container_name: otel-collector
        command: [ "--config=/etc/otel-collector-config.yaml" ]
        volumes:
            - ./otel-collector/otel-collector-config.yaml:/etc/otel-collector-config.yaml
        ports:
            - "4317:4317" #gRPC port to receive OTPL data
        networks:
            - grafana-internal
            - common-network
        depends_on:
            - grafana

    # service to store logs
    loki:
        image: grafana/loki:latest
        container_name: loki
        ports:
            - "3100:3100" # public port
        volumes:
            - ./loki/loki-config.yaml:/etc/loki/loki-config.yaml
        command: -config.file=/etc/loki/loki-config.yaml
        networks:
            - grafana-internal

    # service to scrap and store metrics of external services
    prometheus:
        image: prom/prometheus:latest
        container_name: prometheus
        ports:
            - "9090:9090"
        volumes:
            - ./prometheus:/app.cfg
        networks:
            - grafana-internal
        command:
            --config.file=/app.cfg/prometheus.yml
            --storage.tsdb.path=/prometheus
            --web.console.libraries=/usr/share/prometheus/console_libraries
            --web.console.templates=/usr/share/prometheus/consoles
            --web.enable-remote-write-receiver

    # service to visualize, analyze and manage metrics, traces and logs
    grafana:
        depends_on:
            - loki
            - tempo
            - prometheus
        image: grafana/grafana:latest
        container_name: grafana
        ports:
            - "3000:3000"
        environment:
            GF_SECURITY_ADMIN_USER: admin
            GF_SECURITY_ADMIN_PASSWORD: test
        volumes:
            - ./grafana/provisioning:/etc/grafana/provisioning
            - ./grafana/dashboards:/etc/grafana/dashboards
        networks:
            - grafana-internal
            - common-network

    init: # init compose for Tempo
        image: &tempoImage grafana/tempo:latest
        user: root
        entrypoint:
            - "chown"
            - "10001:10001"
            - "/var/tempo"
        volumes:
            - ./tempo/tempo-data:/var/tempo

    # service to store and visualize traces
    tempo:
        image: *tempoImage
        container_name: tempo
        command: [ "-config.file=/etc/tempo.yaml" ]
        volumes:
            - ./tempo/tempo.yaml:/etc/tempo.yaml
            - ./tempo/tempo-data:/var/tempo
        ports:
            - "3200:3200" # tempo public port
            - "4317:4317" # tempo otpl grpc port
        depends_on:
            - init
        networks:
            - grafana-internal